/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createRootRoute } from '@tanstack/react-router'

import { Route as ProtectedRouteImport } from './routes/_protected'
import { Route as SignInIndexRouteImport } from './routes/sign-in/index'
import { Route as ProtectedIndexRouteImport } from './routes/_protected/index'
import { Route as ProtectedAboutRouteImport } from './routes/_protected/about'

const rootRouteImport = createRootRoute()

const ProtectedRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInIndexRoute = SignInIndexRouteImport.update({
  id: '/sign-in/',
  path: '/sign-in/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedIndexRoute = ProtectedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedAboutRoute = ProtectedAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => ProtectedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/about': typeof ProtectedAboutRoute
  '/': typeof ProtectedIndexRoute
  '/sign-in': typeof SignInIndexRoute
}
export interface FileRoutesByTo {
  '/about': typeof ProtectedAboutRoute
  '/': typeof ProtectedIndexRoute
  '/sign-in': typeof SignInIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_protected': typeof ProtectedRouteWithChildren
  '/_protected/about': typeof ProtectedAboutRoute
  '/_protected/': typeof ProtectedIndexRoute
  '/sign-in/': typeof SignInIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/about' | '/' | '/sign-in'
  fileRoutesByTo: FileRoutesByTo
  to: '/about' | '/' | '/sign-in'
  id:
    | '__root__'
    | '/_protected'
    | '/_protected/about'
    | '/_protected/'
    | '/sign-in/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  ProtectedRoute: typeof ProtectedRouteWithChildren
  SignInIndexRoute: typeof SignInIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in/': {
      id: '/sign-in/'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/': {
      id: '/_protected/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ProtectedIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/about': {
      id: '/_protected/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof ProtectedAboutRouteImport
      parentRoute: typeof ProtectedRoute
    }
  }
}

interface ProtectedRouteChildren {
  ProtectedAboutRoute: typeof ProtectedAboutRoute
  ProtectedIndexRoute: typeof ProtectedIndexRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedAboutRoute: ProtectedAboutRoute,
  ProtectedIndexRoute: ProtectedIndexRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  ProtectedRoute: ProtectedRouteWithChildren,
  SignInIndexRoute: SignInIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

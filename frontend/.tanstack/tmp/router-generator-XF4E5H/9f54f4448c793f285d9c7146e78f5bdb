/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProtectedRouteImport } from './routes/_protected'
import { Route as SignInIndexRouteImport } from './routes/sign-in/index'
import { Route as ProtectedIndexRouteImport } from './routes/_protected/index'
import { Route as ProtectedTodoListSelectIndexRouteImport } from './routes/_protected/todo-list-select/index'
import { Route as ProtectedOrganizationIndexRouteImport } from './routes/_protected/organization/index'
import { Route as ProtectedAccountIndexRouteImport } from './routes/_protected/account/index'
import { Route as ProtectedOrganizationOrganizationIdRouteImport } from './routes/_protected/organization/$organizationId'
import { Route as ProtectedOrganizationIdTodoListIndexRouteImport } from './routes/_protected/$organizationId/todo-list/index'

const ProtectedRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInIndexRoute = SignInIndexRouteImport.update({
  id: '/sign-in/',
  path: '/sign-in/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedIndexRoute = ProtectedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedTodoListSelectIndexRoute =
  ProtectedTodoListSelectIndexRouteImport.update({
    id: '/todo-list-select/',
    path: '/todo-list-select/',
    getParentRoute: () => ProtectedRoute,
  } as any)
const ProtectedOrganizationIndexRoute =
  ProtectedOrganizationIndexRouteImport.update({
    id: '/organization/',
    path: '/organization/',
    getParentRoute: () => ProtectedRoute,
  } as any)
const ProtectedAccountIndexRoute = ProtectedAccountIndexRouteImport.update({
  id: '/account/',
  path: '/account/',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedOrganizationOrganizationIdRoute =
  ProtectedOrganizationOrganizationIdRouteImport.update({
    id: '/organization/$organizationId',
    path: '/organization/$organizationId',
    getParentRoute: () => ProtectedRoute,
  } as any)
const ProtectedOrganizationIdTodoListIndexRoute =
  ProtectedOrganizationIdTodoListIndexRouteImport.update({
    id: '/$organizationId/todo-list/',
    path: '/$organizationId/todo-list/',
    getParentRoute: () => ProtectedRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof ProtectedIndexRoute
  '/sign-in': typeof SignInIndexRoute
  '/organization/$organizationId': typeof ProtectedOrganizationOrganizationIdRoute
  '/account': typeof ProtectedAccountIndexRoute
  '/organization': typeof ProtectedOrganizationIndexRoute
  '/todo-list-select': typeof ProtectedTodoListSelectIndexRoute
  '/$organizationId/todo-list': typeof ProtectedOrganizationIdTodoListIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof ProtectedIndexRoute
  '/sign-in': typeof SignInIndexRoute
  '/organization/$organizationId': typeof ProtectedOrganizationOrganizationIdRoute
  '/account': typeof ProtectedAccountIndexRoute
  '/organization': typeof ProtectedOrganizationIndexRoute
  '/todo-list-select': typeof ProtectedTodoListSelectIndexRoute
  '/$organizationId/todo-list': typeof ProtectedOrganizationIdTodoListIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_protected': typeof ProtectedRouteWithChildren
  '/_protected/': typeof ProtectedIndexRoute
  '/sign-in/': typeof SignInIndexRoute
  '/_protected/organization/$organizationId': typeof ProtectedOrganizationOrganizationIdRoute
  '/_protected/account/': typeof ProtectedAccountIndexRoute
  '/_protected/organization/': typeof ProtectedOrganizationIndexRoute
  '/_protected/todo-list-select/': typeof ProtectedTodoListSelectIndexRoute
  '/_protected/$organizationId/todo-list/': typeof ProtectedOrganizationIdTodoListIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/sign-in'
    | '/organization/$organizationId'
    | '/account'
    | '/organization'
    | '/todo-list-select'
    | '/$organizationId/todo-list'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/sign-in'
    | '/organization/$organizationId'
    | '/account'
    | '/organization'
    | '/todo-list-select'
    | '/$organizationId/todo-list'
  id:
    | '__root__'
    | '/_protected'
    | '/_protected/'
    | '/sign-in/'
    | '/_protected/organization/$organizationId'
    | '/_protected/account/'
    | '/_protected/organization/'
    | '/_protected/todo-list-select/'
    | '/_protected/$organizationId/todo-list/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  ProtectedRoute: typeof ProtectedRouteWithChildren
  SignInIndexRoute: typeof SignInIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in/': {
      id: '/sign-in/'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/': {
      id: '/_protected/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ProtectedIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/todo-list-select/': {
      id: '/_protected/todo-list-select/'
      path: '/todo-list-select'
      fullPath: '/todo-list-select'
      preLoaderRoute: typeof ProtectedTodoListSelectIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/organization/': {
      id: '/_protected/organization/'
      path: '/organization'
      fullPath: '/organization'
      preLoaderRoute: typeof ProtectedOrganizationIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/account/': {
      id: '/_protected/account/'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof ProtectedAccountIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/organization/$organizationId': {
      id: '/_protected/organization/$organizationId'
      path: '/organization/$organizationId'
      fullPath: '/organization/$organizationId'
      preLoaderRoute: typeof ProtectedOrganizationOrganizationIdRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/$organizationId/todo-list/': {
      id: '/_protected/$organizationId/todo-list/'
      path: '/$organizationId/todo-list'
      fullPath: '/$organizationId/todo-list'
      preLoaderRoute: typeof ProtectedOrganizationIdTodoListIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
  }
}

interface ProtectedRouteChildren {
  ProtectedIndexRoute: typeof ProtectedIndexRoute
  ProtectedOrganizationOrganizationIdRoute: typeof ProtectedOrganizationOrganizationIdRoute
  ProtectedAccountIndexRoute: typeof ProtectedAccountIndexRoute
  ProtectedOrganizationIndexRoute: typeof ProtectedOrganizationIndexRoute
  ProtectedTodoListSelectIndexRoute: typeof ProtectedTodoListSelectIndexRoute
  ProtectedOrganizationIdTodoListIndexRoute: typeof ProtectedOrganizationIdTodoListIndexRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedIndexRoute: ProtectedIndexRoute,
  ProtectedOrganizationOrganizationIdRoute:
    ProtectedOrganizationOrganizationIdRoute,
  ProtectedAccountIndexRoute: ProtectedAccountIndexRoute,
  ProtectedOrganizationIndexRoute: ProtectedOrganizationIndexRoute,
  ProtectedTodoListSelectIndexRoute: ProtectedTodoListSelectIndexRoute,
  ProtectedOrganizationIdTodoListIndexRoute:
    ProtectedOrganizationIdTodoListIndexRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  ProtectedRoute: ProtectedRouteWithChildren,
  SignInIndexRoute: SignInIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
